<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <before>false</before>
        <description>Git updateset Saver - see Execute instructions in comments.</description>
        <name>GPX-GitMyGitStuff</name>
        <record_for_rollback>true</record_for_rollback>
        <script><![CDATA[//-------------------------------------------------------------------------------
// Script Execution:
//   var helper = new GitMyStuff();
//   helper.process();
//   See 3 x Script Includes:
//-------------------------------------------------------------------------------
var GitMyStuff = Class.create();
GitMyStuff.prototype = {
	initialize: function() {
		this.UPDSETFILTER = gs.getProperty("com.gitbackup.updatesetfilter");
	},
	
	// Insert or update the Git Uploads table with the latest upload info
	updateGitUpload: function(sysid, filename, sha){
		var git = new GlideRecord("u_git_update_set_upload");
		if (git.get("u_local_update_set_id", sysid)){
			git.u_sha = sha;
			git.u_last_upload = new GlideDateTime();
			git.u_file_name = filename;
			git.update();
		}
		else{
			git.initialize();
			git.u_local_update_set_id = sysid;
			git.u_sha = sha;
			git.u_last_upload = new GlideDateTime();
			git.u_file_name = filename;
			git.insert();
		}
	},
	
	// Get timestamp of latest customer update under a specific update set
	getLastUpdateDate: function(sysid){
		var custUpdate = new GlideRecord("sys_update_xml");
		custUpdate.addQuery("update_set", sysid);
		custUpdate.orderByDesc("sys_updated_on");
		custUpdate.setLimit(1);
		custUpdate.query();
		if (custUpdate.next()){
			return custUpdate.sys_updated_on;
		}
		else{
			return false;
		}
	},
	
	// Extract and back up to GitHub a specific update set
	backupUpdateSet: function(sysid, name){
		var fileName = gs.getProperty("instance_name") + "-" + sysid + ".xml";
		var usetHelper = new UpdateSetUtil();
		var updateSetContents = usetHelper.copyAndExtract(sysid);
		var util = new GitWSHelper();
		var sha = util.uploadFile(fileName, updateSetContents, name);
		this.updateGitUpload(sysid, fileName, sha);
	},
	
	// Main code, to be called by scheduled job
	process: function(){
		// Iterate through filtered list of update sets
		var updateSet = new GlideRecord("sys_update_set");
		updateSet.addEncodedQuery(this.UPDSETFILTER);
		updateSet.query();
		while (updateSet.next()){
			// See if the update set was ever uploaded to Git
			var gitUploads = new GlideRecord("u_git_update_set_upload");
			if (gitUploads.get("u_local_update_set_id", updateSet.sys_id)){
				// If it was, check the date of the last customer update
				var lastUpdate = this.getLastUpdateDate(updateSet.sys_id);
				var lastUpload = gitUploads.u_last_upload;
				// Only backup update set if: 1) no customer updates have occurred, but the update set itself has changed since the last upload, 2) some customer updates have occured on it since last upload, or 3) there are older customer updates but the update set record itself has changed since the last upload
				if ((!lastUpdate && updateSet.sys_updated_on > lastUpload) || lastUpdate > lastUpload || updateSet.sys_updated_on > lastUpload){
					this.backupUpdateSet(updateSet.sys_id, updateSet.name);
				}
			}
			else{
				// Update set was never uploaded to Git, back it up
				this.backupUpdateSet(updateSet.sys_id, updateSet.name);
			}
		}
	},
	
	type: 'GitMyStuff'
};
]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-01 05:55:14</sys_created_on>
        <sys_id>d20ff13a97830210fee6fefce053afcb</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>GPX-GitMyGitStuff</sys_name>
        <sys_package display_value="SEALTEAM" source="x_1201200_sealteam">87af8e6d97410210fee6fefce053afdd</sys_package>
        <sys_policy/>
        <sys_scope display_value="SEALTEAM">87af8e6d97410210fee6fefce053afdd</sys_scope>
        <sys_update_name>sys_script_fix_d20ff13a97830210fee6fefce053afcb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-01 06:00:26</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
