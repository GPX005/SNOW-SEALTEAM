<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <before>false</before>
        <description>Git updateset Saver</description>
        <name>GPX-GitWSHelper</name>
        <record_for_rollback>true</record_for_rollback>
        <script><![CDATA[var GitWSHelper = Class.create();
GitWSHelper.prototype = {
	initialize: function() {
		this.GHUSER = gs.getProperty("com.gitbackup.ghuser");
		this.GHPWD = gs.getProperty("com.gitbackup.ghpwd");
		this.GHREPO = gs.getProperty("com.gitbackup.ghrepo");
	},
	
	// Get the SHA for a specific file. If the file doesn't exist, return false
	_getSHA: function(fileName) {
		var restMessage = new sn_ws.RESTMessageV2();
		restMessage.setBasicAuth(this.GHUSER, this.GHPWD);
		restMessage.setHttpMethod("get");
		restMessage.setEndpoint("https://api.github.com/repos/" + this.GHREPO + "/contents/" + fileName);
		var response = restMessage.execute();
		var body = response.getBody();
		var parser = new JSON();
		var bodyObj = parser.decode(body);
		if (JSUtil.nil(bodyObj.sha)){
			return false;
		}
		else{
			return bodyObj.sha;
		}
	},
	
	// Upload a file to GitHub
	uploadFile: function(fileName, fileContents, fileDescription){
		var sha = this._getSHA(fileName);
		var restMessage = new sn_ws.RESTMessageV2();
		restMessage.setBasicAuth(this.GHUSER, this.GHPWD);
		restMessage.setHttpMethod("put");
		restMessage.setEndpoint("https://api.github.com/repos/" + this.GHREPO + "/contents/" + fileName);
		var util = new GlideStringUtil();
		var encodedContents = util.base64Encode(fileContents);
		// Note we are building the request body as a string, as setStringParameter seems to run into issues with the GitHub REST API
		var reqBody = "\"path\" : \"" + fileName + "\", \"message\" : \""+fileDescription+"\", \"content\" : \"" + encodedContents + "\"";
		if (sha) reqBody += ", \"sha\" : \"" + sha +"\"";
		restMessage.setRequestBody("{" + reqBody + "}");
		var response = restMessage.execute();
		var body = response.getBody();
		var parser = new JSON();
		var bodyObj = parser.decode(body);
		if (JSUtil.nil(bodyObj.content.sha)){
			return false;
		}
		else{
			return bodyObj.content.sha;
		}
	},
	
	type: 'GitWSHelper'
};
]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-01 05:55:53</sys_created_on>
        <sys_id>044f35f297830210fee6fefce053aff5</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>GPX-GitWSHelper</sys_name>
        <sys_package display_value="SEALTEAM" source="x_1201200_sealteam">87af8e6d97410210fee6fefce053afdd</sys_package>
        <sys_policy/>
        <sys_scope display_value="SEALTEAM">87af8e6d97410210fee6fefce053afdd</sys_scope>
        <sys_update_name>sys_script_fix_044f35f297830210fee6fefce053aff5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-01 06:00:34</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
